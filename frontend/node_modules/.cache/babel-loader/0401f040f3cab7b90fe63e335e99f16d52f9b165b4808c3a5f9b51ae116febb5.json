{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { applicationsAPI } from '../../services/api';\nimport { FETCH_APPLICATIONS_REQUEST, FETCH_APPLICATION_REQUEST, SUBMIT_APPLICATION_REQUEST, UPDATE_APPLICATION_STATUS_REQUEST, DELETE_APPLICATION_REQUEST, FETCH_JOB_APPLICATIONS_REQUEST } from '../actions';\nimport { fetchApplicationsStart, fetchApplicationsSuccess, fetchApplicationsFailure, fetchApplicationStart, fetchApplicationSuccess, fetchApplicationFailure, submitApplicationStart, submitApplicationSuccess, submitApplicationFailure, updateApplicationStatusStart, updateApplicationStatusSuccess, updateApplicationStatusFailure, deleteApplicationStart, deleteApplicationSuccess, deleteApplicationFailure, fetchJobApplicationsStart, fetchJobApplicationsSuccess, fetchJobApplicationsFailure } from '../reducers/applicationsSlice';\n\n// Fetch applications saga\nfunction* fetchApplicationsSaga(action) {\n  try {\n    yield put(fetchApplicationsStart());\n    const response = yield call(applicationsAPI.getApplications, action.payload);\n    yield put(fetchApplicationsSuccess(response.data));\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to fetch applications';\n    yield put(fetchApplicationsFailure(errorMessage));\n  }\n}\n\n// Fetch single application saga\nfunction* fetchApplicationSaga(action) {\n  try {\n    yield put(fetchApplicationStart());\n    const response = yield call(applicationsAPI.getApplication, action.payload);\n    yield put(fetchApplicationSuccess(response.data));\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to fetch application';\n    yield put(fetchApplicationFailure(errorMessage));\n  }\n}\n\n// Submit application saga\nfunction* submitApplicationSaga(action) {\n  try {\n    yield put(submitApplicationStart());\n    const response = yield call(applicationsAPI.submitApplication, action.payload);\n    yield put(submitApplicationSuccess(response.data));\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to submit application';\n    yield put(submitApplicationFailure(errorMessage));\n  }\n}\n\n// Update application status saga\nfunction* updateApplicationStatusSaga(action) {\n  try {\n    yield put(updateApplicationStatusStart());\n    const {\n      id,\n      status\n    } = action.payload;\n    const response = yield call(applicationsAPI.updateApplicationStatus, id, status);\n    yield put(updateApplicationStatusSuccess(response.data));\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to update application status';\n    yield put(updateApplicationStatusFailure(errorMessage));\n  }\n}\n\n// Delete application saga\nfunction* deleteApplicationSaga(action) {\n  try {\n    yield put(deleteApplicationStart());\n    yield call(applicationsAPI.deleteApplication, action.payload);\n    yield put(deleteApplicationSuccess(action.payload));\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to delete application';\n    yield put(deleteApplicationFailure(errorMessage));\n  }\n}\n\n// Fetch job applications saga\nfunction* fetchJobApplicationsSaga(action) {\n  try {\n    yield put(fetchJobApplicationsStart());\n    const response = yield call(applicationsAPI.getJobApplications, action.payload);\n    yield put(fetchJobApplicationsSuccess(response.data));\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    const errorMessage = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to fetch job applications';\n    yield put(fetchJobApplicationsFailure(errorMessage));\n  }\n}\n\n// Applications saga watcher\nexport default function* applicationsSaga() {\n  yield takeLatest(FETCH_APPLICATIONS_REQUEST, fetchApplicationsSaga);\n  yield takeLatest(FETCH_APPLICATION_REQUEST, fetchApplicationSaga);\n  yield takeLatest(SUBMIT_APPLICATION_REQUEST, submitApplicationSaga);\n  yield takeLatest(UPDATE_APPLICATION_STATUS_REQUEST, updateApplicationStatusSaga);\n  yield takeLatest(DELETE_APPLICATION_REQUEST, deleteApplicationSaga);\n  yield takeLatest(FETCH_JOB_APPLICATIONS_REQUEST, fetchJobApplicationsSaga);\n}","map":{"version":3,"names":["takeLatest","call","put","applicationsAPI","FETCH_APPLICATIONS_REQUEST","FETCH_APPLICATION_REQUEST","SUBMIT_APPLICATION_REQUEST","UPDATE_APPLICATION_STATUS_REQUEST","DELETE_APPLICATION_REQUEST","FETCH_JOB_APPLICATIONS_REQUEST","fetchApplicationsStart","fetchApplicationsSuccess","fetchApplicationsFailure","fetchApplicationStart","fetchApplicationSuccess","fetchApplicationFailure","submitApplicationStart","submitApplicationSuccess","submitApplicationFailure","updateApplicationStatusStart","updateApplicationStatusSuccess","updateApplicationStatusFailure","deleteApplicationStart","deleteApplicationSuccess","deleteApplicationFailure","fetchJobApplicationsStart","fetchJobApplicationsSuccess","fetchJobApplicationsFailure","fetchApplicationsSaga","action","response","getApplications","payload","data","error","_error$response","_error$response$data","errorMessage","fetchApplicationSaga","getApplication","_error$response2","_error$response2$data","submitApplicationSaga","submitApplication","_error$response3","_error$response3$data","updateApplicationStatusSaga","id","status","updateApplicationStatus","_error$response4","_error$response4$data","deleteApplicationSaga","deleteApplication","_error$response5","_error$response5$data","fetchJobApplicationsSaga","getJobApplications","_error$response6","_error$response6$data","applicationsSaga"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/sagas/applicationsSaga.js"],"sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport { applicationsAPI } from '../../services/api';\nimport {\n  FETCH_APPLICATIONS_REQUEST,\n  FETCH_APPLICATION_REQUEST,\n  SUBMIT_APPLICATION_REQUEST,\n  UPDATE_APPLICATION_STATUS_REQUEST,\n  DELETE_APPLICATION_REQUEST,\n  FETCH_JOB_APPLICATIONS_REQUEST,\n} from '../actions';\nimport {\n  fetchApplicationsStart,\n  fetchApplicationsSuccess,\n  fetchApplicationsFailure,\n  fetchApplicationStart,\n  fetchApplicationSuccess,\n  fetchApplicationFailure,\n  submitApplicationStart,\n  submitApplicationSuccess,\n  submitApplicationFailure,\n  updateApplicationStatusStart,\n  updateApplicationStatusSuccess,\n  updateApplicationStatusFailure,\n  deleteApplicationStart,\n  deleteApplicationSuccess,\n  deleteApplicationFailure,\n  fetchJobApplicationsStart,\n  fetchJobApplicationsSuccess,\n  fetchJobApplicationsFailure,\n} from '../reducers/applicationsSlice';\n\n// Fetch applications saga\nfunction* fetchApplicationsSaga(action) {\n  try {\n    yield put(fetchApplicationsStart());\n    const response = yield call(applicationsAPI.getApplications, action.payload);\n    yield put(fetchApplicationsSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch applications';\n    yield put(fetchApplicationsFailure(errorMessage));\n  }\n}\n\n// Fetch single application saga\nfunction* fetchApplicationSaga(action) {\n  try {\n    yield put(fetchApplicationStart());\n    const response = yield call(applicationsAPI.getApplication, action.payload);\n    yield put(fetchApplicationSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch application';\n    yield put(fetchApplicationFailure(errorMessage));\n  }\n}\n\n// Submit application saga\nfunction* submitApplicationSaga(action) {\n  try {\n    yield put(submitApplicationStart());\n    const response = yield call(applicationsAPI.submitApplication, action.payload);\n    yield put(submitApplicationSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to submit application';\n    yield put(submitApplicationFailure(errorMessage));\n  }\n}\n\n// Update application status saga\nfunction* updateApplicationStatusSaga(action) {\n  try {\n    yield put(updateApplicationStatusStart());\n    const { id, status } = action.payload;\n    const response = yield call(applicationsAPI.updateApplicationStatus, id, status);\n    yield put(updateApplicationStatusSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to update application status';\n    yield put(updateApplicationStatusFailure(errorMessage));\n  }\n}\n\n// Delete application saga\nfunction* deleteApplicationSaga(action) {\n  try {\n    yield put(deleteApplicationStart());\n    yield call(applicationsAPI.deleteApplication, action.payload);\n    yield put(deleteApplicationSuccess(action.payload));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to delete application';\n    yield put(deleteApplicationFailure(errorMessage));\n  }\n}\n\n// Fetch job applications saga\nfunction* fetchJobApplicationsSaga(action) {\n  try {\n    yield put(fetchJobApplicationsStart());\n    const response = yield call(applicationsAPI.getJobApplications, action.payload);\n    yield put(fetchJobApplicationsSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch job applications';\n    yield put(fetchJobApplicationsFailure(errorMessage));\n  }\n}\n\n// Applications saga watcher\nexport default function* applicationsSaga() {\n  yield takeLatest(FETCH_APPLICATIONS_REQUEST, fetchApplicationsSaga);\n  yield takeLatest(FETCH_APPLICATION_REQUEST, fetchApplicationSaga);\n  yield takeLatest(SUBMIT_APPLICATION_REQUEST, submitApplicationSaga);\n  yield takeLatest(UPDATE_APPLICATION_STATUS_REQUEST, updateApplicationStatusSaga);\n  yield takeLatest(DELETE_APPLICATION_REQUEST, deleteApplicationSaga);\n  yield takeLatest(FETCH_JOB_APPLICATIONS_REQUEST, fetchJobApplicationsSaga);\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}