{"ast":null,"code":"import{takeLatest,call,put}from'redux-saga/effects';import{authAPI}from'../../services/api';import{LOGIN_REQUEST,REGISTER_REQUEST,LOGOUT_REQUEST,GET_PROFILE_REQUEST,UPDATE_PROFILE_REQUEST}from'../actions';import{loginStart,loginSuccess,loginFailure,registerStart,registerSuccess,registerFailure,logout,updateProfile,setAuthenticated,setUnauthenticated}from'../reducers/authSlice';// Login saga\nfunction*loginSaga(action){try{console.log('Login saga started with payload:',action.payload);yield put(loginStart());console.log('Making API call to login endpoint...');const response=yield call(authAPI.login,action.payload);console.log('Login API response:',response.data);yield put(loginSuccess(response.data));console.log('Login success action dispatched');}catch(error){var _error$response,_error$response2,_error$response3,_error$response5,_error$response7,_error$response7$data;console.error('Login saga error:',error);console.error('Error details:',{status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,data:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data,message:error.message});let errorMessage='Login failed. Please try again.';if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===401){var _error$response4,_error$response4$data;errorMessage=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Invalid email or password';}else if(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)===429){var _error$response6,_error$response6$data;errorMessage=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||'Too many login attempts. Please wait a few minutes and try again.';}else if((_error$response7=error.response)!==null&&_error$response7!==void 0&&(_error$response7$data=_error$response7.data)!==null&&_error$response7$data!==void 0&&_error$response7$data.error){errorMessage=error.response.data.error;}yield put(loginFailure(errorMessage));}}// Register saga\nfunction*registerSaga(action){try{yield put(registerStart());const response=yield call(authAPI.register,action.payload);yield put(registerSuccess(response.data));}catch(error){var _error$response8,_error$response8$data;const errorMessage=((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.error)||'Registration failed';yield put(registerFailure(errorMessage));}}// Logout saga\nfunction*logoutSaga(){try{yield put(logout());}catch(error){console.error('Logout error:',error);}}// Get profile saga\nfunction*getProfileSaga(){try{const response=yield call(authAPI.getProfile);const token=localStorage.getItem('token');yield put(setAuthenticated({user:response.data.user,token}));}catch(error){var _error$response9;console.error('Get profile error:',error);// If token is invalid, logout\nif(((_error$response9=error.response)===null||_error$response9===void 0?void 0:_error$response9.status)===401){yield put(setUnauthenticated());}}}// Update profile saga\nfunction*updateProfileSaga(action){try{const response=yield call(authAPI.updateProfile,action.payload);yield put(updateProfile(response.data.user));}catch(error){var _error$response0,_error$response0$data;const errorMessage=((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.error)||'Profile update failed';console.error('Update profile error:',errorMessage);}}// Auth saga watcher\nexport default function*authSaga(){yield takeLatest(LOGIN_REQUEST,loginSaga);yield takeLatest(REGISTER_REQUEST,registerSaga);yield takeLatest(LOGOUT_REQUEST,logoutSaga);yield takeLatest(GET_PROFILE_REQUEST,getProfileSaga);yield takeLatest(UPDATE_PROFILE_REQUEST,updateProfileSaga);}","map":{"version":3,"names":["takeLatest","call","put","authAPI","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT_REQUEST","GET_PROFILE_REQUEST","UPDATE_PROFILE_REQUEST","loginStart","loginSuccess","loginFailure","registerStart","registerSuccess","registerFailure","logout","updateProfile","setAuthenticated","setUnauthenticated","loginSaga","action","console","log","payload","response","login","data","error","_error$response","_error$response2","_error$response3","_error$response5","_error$response7","_error$response7$data","status","message","errorMessage","_error$response4","_error$response4$data","_error$response6","_error$response6$data","registerSaga","register","_error$response8","_error$response8$data","logoutSaga","getProfileSaga","getProfile","token","localStorage","getItem","user","_error$response9","updateProfileSaga","_error$response0","_error$response0$data","authSaga"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/sagas/authSaga.js"],"sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport { authAPI } from '../../services/api';\nimport {\n  LOGIN_REQUEST,\n  REGISTER_REQUEST,\n  LOGOUT_REQUEST,\n  GET_PROFILE_REQUEST,\n  UPDATE_PROFILE_REQUEST,\n} from '../actions';\nimport {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  logout,\n  updateProfile,\n  setAuthenticated,\n  setUnauthenticated,\n} from '../reducers/authSlice';\n\n// Login saga\nfunction* loginSaga(action) {\n  try {\n    console.log('Login saga started with payload:', action.payload);\n    yield put(loginStart());\n    \n    console.log('Making API call to login endpoint...');\n    const response = yield call(authAPI.login, action.payload);\n    console.log('Login API response:', response.data);\n    \n    yield put(loginSuccess(response.data));\n    console.log('Login success action dispatched');\n  } catch (error) {\n    console.error('Login saga error:', error);\n    console.error('Error details:', {\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message\n    });\n    \n    let errorMessage = 'Login failed. Please try again.';\n    \n    if (error.response?.status === 401) {\n      errorMessage = error.response?.data?.error || 'Invalid email or password';\n    } else if (error.response?.status === 429) {\n      errorMessage = error.response?.data?.error || 'Too many login attempts. Please wait a few minutes and try again.';\n    } else if (error.response?.data?.error) {\n      errorMessage = error.response.data.error;\n    }\n    \n    yield put(loginFailure(errorMessage));\n  }\n}\n\n// Register saga\nfunction* registerSaga(action) {\n  try {\n    yield put(registerStart());\n    const response = yield call(authAPI.register, action.payload);\n    yield put(registerSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Registration failed';\n    yield put(registerFailure(errorMessage));\n  }\n}\n\n// Logout saga\nfunction* logoutSaga() {\n  try {\n    yield put(logout());\n  } catch (error) {\n    console.error('Logout error:', error);\n  }\n}\n\n// Get profile saga\nfunction* getProfileSaga() {\n  try {\n    const response = yield call(authAPI.getProfile);\n    const token = localStorage.getItem('token');\n    yield put(setAuthenticated({ user: response.data.user, token }));\n  } catch (error) {\n    console.error('Get profile error:', error);\n    // If token is invalid, logout\n    if (error.response?.status === 401) {\n      yield put(setUnauthenticated());\n    }\n  }\n}\n\n// Update profile saga\nfunction* updateProfileSaga(action) {\n  try {\n    const response = yield call(authAPI.updateProfile, action.payload);\n    yield put(updateProfile(response.data.user));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Profile update failed';\n    console.error('Update profile error:', errorMessage);\n  }\n}\n\n// Auth saga watcher\nexport default function* authSaga() {\n  yield takeLatest(LOGIN_REQUEST, loginSaga);\n  yield takeLatest(REGISTER_REQUEST, registerSaga);\n  yield takeLatest(LOGOUT_REQUEST, logoutSaga);\n  yield takeLatest(GET_PROFILE_REQUEST, getProfileSaga);\n  yield takeLatest(UPDATE_PROFILE_REQUEST, updateProfileSaga);\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}