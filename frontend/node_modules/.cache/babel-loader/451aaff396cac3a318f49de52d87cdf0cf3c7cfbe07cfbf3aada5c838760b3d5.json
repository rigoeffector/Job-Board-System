{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import createSagaMiddleware from'redux-saga';import rootReducer from'./reducers';import rootSaga from'./sagas';const sagaMiddleware=createSagaMiddleware();const store=configureStore({reducer:rootReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware({thunk:false,serializableCheck:{ignoredActions:['persist/PERSIST']}}).concat(sagaMiddleware)});sagaMiddleware.run(rootSaga);export default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","store","reducer","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","concat","run"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: false,\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST'],\n      },\n    }).concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store; "],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,oBAAoB,KAAM,YAAY,CAC7C,MAAO,CAAAC,WAAW,KAAM,YAAY,CACpC,MAAO,CAAAC,QAAQ,KAAM,SAAS,CAE9B,KAAM,CAAAC,cAAc,CAAGH,oBAAoB,CAAC,CAAC,CAE7C,KAAM,CAAAI,KAAK,CAAGL,cAAc,CAAC,CAC3BM,OAAO,CAAEJ,WAAW,CACpBK,UAAU,CAAGC,oBAAoB,EAC/BA,oBAAoB,CAAC,CACnBC,KAAK,CAAE,KAAK,CACZC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAC,iBAAiB,CACpC,CACF,CAAC,CAAC,CAACC,MAAM,CAACR,cAAc,CAC5B,CAAC,CAAC,CAEFA,cAAc,CAACS,GAAG,CAACV,QAAQ,CAAC,CAE5B,cAAe,CAAAE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}