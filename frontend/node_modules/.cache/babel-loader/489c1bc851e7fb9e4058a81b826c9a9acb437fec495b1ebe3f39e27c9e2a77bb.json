{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { authAPI } from '../../services/api';\nimport { LOGIN_REQUEST, REGISTER_REQUEST, LOGOUT_REQUEST, GET_PROFILE_REQUEST, UPDATE_PROFILE_REQUEST } from '../actions';\nimport { loginStart, loginSuccess, loginFailure, registerStart, registerSuccess, registerFailure, logout, updateProfile, setAuthenticated, setUnauthenticated } from '../reducers/authSlice';\n\n// Login saga\nfunction* loginSaga(action) {\n  try {\n    console.log('Login saga started with payload:', action.payload);\n    yield put(loginStart());\n    console.log('Making API call to login endpoint...');\n    const response = yield call(authAPI.login, action.payload);\n    console.log('Login API response:', response.data);\n    yield put(loginSuccess(response.data));\n    console.log('Login success action dispatched');\n  } catch (error) {\n    var _error$response, _error$response2, _error$response3, _error$response5, _error$response7, _error$response7$data;\n    console.error('Login saga error:', error);\n    console.error('Error details:', {\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      message: error.message\n    });\n    let errorMessage = 'Login failed. Please try again.';\n    if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n      var _error$response4, _error$response4$data;\n      errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Invalid email or password';\n    } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 429) {\n      var _error$response6, _error$response6$data;\n      errorMessage = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Too many login attempts. Please wait a few minutes and try again.';\n    } else if ((_error$response7 = error.response) !== null && _error$response7 !== void 0 && (_error$response7$data = _error$response7.data) !== null && _error$response7$data !== void 0 && _error$response7$data.error) {\n      errorMessage = error.response.data.error;\n    }\n    yield put(loginFailure(errorMessage));\n  }\n}\n\n// Register saga\nfunction* registerSaga(action) {\n  try {\n    yield put(registerStart());\n    const response = yield call(authAPI.register, action.payload);\n    yield put(registerSuccess(response.data));\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n    const errorMessage = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || 'Registration failed';\n    yield put(registerFailure(errorMessage));\n  }\n}\n\n// Logout saga\nfunction* logoutSaga() {\n  try {\n    yield put(logout());\n  } catch (error) {\n    console.error('Logout error:', error);\n  }\n}\n\n// Get profile saga\nfunction* getProfileSaga() {\n  try {\n    const response = yield call(authAPI.getProfile);\n    const token = localStorage.getItem('token');\n    yield put(setAuthenticated({\n      user: response.data.user,\n      token\n    }));\n  } catch (error) {\n    var _error$response9;\n    console.error('Get profile error:', error);\n    // If token is invalid, logout\n    if (((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status) === 401) {\n      yield put(setUnauthenticated());\n    }\n  }\n}\n\n// Update profile saga\nfunction* updateProfileSaga(action) {\n  try {\n    const response = yield call(authAPI.updateProfile, action.payload);\n    yield put(updateProfile(response.data.user));\n  } catch (error) {\n    var _error$response0, _error$response0$data;\n    const errorMessage = ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.error) || 'Profile update failed';\n    console.error('Update profile error:', errorMessage);\n  }\n}\n\n// Auth saga watcher\nexport default function* authSaga() {\n  yield takeLatest(LOGIN_REQUEST, loginSaga);\n  yield takeLatest(REGISTER_REQUEST, registerSaga);\n  yield takeLatest(LOGOUT_REQUEST, logoutSaga);\n  yield takeLatest(GET_PROFILE_REQUEST, getProfileSaga);\n  yield takeLatest(UPDATE_PROFILE_REQUEST, updateProfileSaga);\n}","map":{"version":3,"names":["takeLatest","call","put","authAPI","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT_REQUEST","GET_PROFILE_REQUEST","UPDATE_PROFILE_REQUEST","loginStart","loginSuccess","loginFailure","registerStart","registerSuccess","registerFailure","logout","updateProfile","setAuthenticated","setUnauthenticated","loginSaga","action","console","log","payload","response","login","data","error","_error$response","_error$response2","_error$response3","_error$response5","_error$response7","_error$response7$data","status","message","errorMessage","_error$response4","_error$response4$data","_error$response6","_error$response6$data","registerSaga","register","_error$response8","_error$response8$data","logoutSaga","getProfileSaga","getProfile","token","localStorage","getItem","user","_error$response9","updateProfileSaga","_error$response0","_error$response0$data","authSaga"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/sagas/authSaga.js"],"sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport { authAPI } from '../../services/api';\nimport {\n  LOGIN_REQUEST,\n  REGISTER_REQUEST,\n  LOGOUT_REQUEST,\n  GET_PROFILE_REQUEST,\n  UPDATE_PROFILE_REQUEST,\n} from '../actions';\nimport {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  logout,\n  updateProfile,\n  setAuthenticated,\n  setUnauthenticated,\n} from '../reducers/authSlice';\n\n// Login saga\nfunction* loginSaga(action) {\n  try {\n    console.log('Login saga started with payload:', action.payload);\n    yield put(loginStart());\n    \n    console.log('Making API call to login endpoint...');\n    const response = yield call(authAPI.login, action.payload);\n    console.log('Login API response:', response.data);\n    \n    yield put(loginSuccess(response.data));\n    console.log('Login success action dispatched');\n  } catch (error) {\n    console.error('Login saga error:', error);\n    console.error('Error details:', {\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message\n    });\n    \n    let errorMessage = 'Login failed. Please try again.';\n    \n    if (error.response?.status === 401) {\n      errorMessage = error.response?.data?.error || 'Invalid email or password';\n    } else if (error.response?.status === 429) {\n      errorMessage = error.response?.data?.error || 'Too many login attempts. Please wait a few minutes and try again.';\n    } else if (error.response?.data?.error) {\n      errorMessage = error.response.data.error;\n    }\n    \n    yield put(loginFailure(errorMessage));\n  }\n}\n\n// Register saga\nfunction* registerSaga(action) {\n  try {\n    yield put(registerStart());\n    const response = yield call(authAPI.register, action.payload);\n    yield put(registerSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Registration failed';\n    yield put(registerFailure(errorMessage));\n  }\n}\n\n// Logout saga\nfunction* logoutSaga() {\n  try {\n    yield put(logout());\n  } catch (error) {\n    console.error('Logout error:', error);\n  }\n}\n\n// Get profile saga\nfunction* getProfileSaga() {\n  try {\n    const response = yield call(authAPI.getProfile);\n    const token = localStorage.getItem('token');\n    yield put(setAuthenticated({ user: response.data.user, token }));\n  } catch (error) {\n    console.error('Get profile error:', error);\n    // If token is invalid, logout\n    if (error.response?.status === 401) {\n      yield put(setUnauthenticated());\n    }\n  }\n}\n\n// Update profile saga\nfunction* updateProfileSaga(action) {\n  try {\n    const response = yield call(authAPI.updateProfile, action.payload);\n    yield put(updateProfile(response.data.user));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Profile update failed';\n    console.error('Update profile error:', errorMessage);\n  }\n}\n\n// Auth saga watcher\nexport default function* authSaga() {\n  yield takeLatest(LOGIN_REQUEST, loginSaga);\n  yield takeLatest(REGISTER_REQUEST, registerSaga);\n  yield takeLatest(LOGOUT_REQUEST, logoutSaga);\n  yield takeLatest(GET_PROFILE_REQUEST, getProfileSaga);\n  yield takeLatest(UPDATE_PROFILE_REQUEST, updateProfileSaga);\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}