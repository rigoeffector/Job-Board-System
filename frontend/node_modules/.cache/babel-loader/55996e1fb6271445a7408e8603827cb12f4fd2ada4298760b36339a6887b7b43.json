{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  applications: [],\n  currentApplication: null,\n  loading: false,\n  error: null,\n  pagination: {\n    page: 1,\n    limit: 10,\n    total: 0,\n    pages: 0\n  },\n  filters: {\n    job_id: '',\n    status: ''\n  }\n};\nconst applicationsSlice = createSlice({\n  name: 'applications',\n  initialState,\n  reducers: {\n    fetchApplicationsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchApplicationsSuccess: (state, action) => {\n      state.loading = false;\n      state.applications = action.payload.applications;\n      state.pagination = action.payload.pagination;\n    },\n    fetchApplicationsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchApplicationStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchApplicationSuccess: (state, action) => {\n      state.loading = false;\n      state.currentApplication = action.payload.application;\n    },\n    fetchApplicationFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    submitApplicationStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    submitApplicationSuccess: (state, action) => {\n      state.loading = false;\n      state.applications.unshift(action.payload.application);\n    },\n    submitApplicationFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateApplicationStatusStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    updateApplicationStatusSuccess: (state, action) => {\n      state.loading = false;\n      const index = state.applications.findIndex(app => app.id === action.payload.application.id);\n      if (index !== -1) {\n        state.applications[index] = action.payload.application;\n      }\n      if (state.currentApplication && state.currentApplication.id === action.payload.application.id) {\n        state.currentApplication = action.payload.application;\n      }\n    },\n    updateApplicationStatusFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    deleteApplicationStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    deleteApplicationSuccess: (state, action) => {\n      state.loading = false;\n      state.applications = state.applications.filter(app => app.id !== action.payload);\n      if (state.currentApplication && state.currentApplication.id === action.payload) {\n        state.currentApplication = null;\n      }\n    },\n    deleteApplicationFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchJobApplicationsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchJobApplicationsSuccess: (state, action) => {\n      state.loading = false;\n      state.applications = action.payload.applications;\n    },\n    fetchJobApplicationsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n      state.pagination.page = 1;\n    },\n    clearFilters: state => {\n      state.filters = initialState.filters;\n      state.pagination.page = 1;\n    },\n    setPage: (state, action) => {\n      state.pagination.page = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    clearCurrentApplication: state => {\n      state.currentApplication = null;\n    }\n  }\n});\nexport const {\n  fetchApplicationsStart,\n  fetchApplicationsSuccess,\n  fetchApplicationsFailure,\n  fetchApplicationStart,\n  fetchApplicationSuccess,\n  fetchApplicationFailure,\n  submitApplicationStart,\n  submitApplicationSuccess,\n  submitApplicationFailure,\n  updateApplicationStatusStart,\n  updateApplicationStatusSuccess,\n  updateApplicationStatusFailure,\n  deleteApplicationStart,\n  deleteApplicationSuccess,\n  deleteApplicationFailure,\n  fetchJobApplicationsStart,\n  fetchJobApplicationsSuccess,\n  fetchJobApplicationsFailure,\n  setFilters,\n  clearFilters,\n  setPage,\n  clearError,\n  clearCurrentApplication\n} = applicationsSlice.actions;\nexport default applicationsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","applications","currentApplication","loading","error","pagination","page","limit","total","pages","filters","job_id","status","applicationsSlice","name","reducers","fetchApplicationsStart","state","fetchApplicationsSuccess","action","payload","fetchApplicationsFailure","fetchApplicationStart","fetchApplicationSuccess","application","fetchApplicationFailure","submitApplicationStart","submitApplicationSuccess","unshift","submitApplicationFailure","updateApplicationStatusStart","updateApplicationStatusSuccess","index","findIndex","app","id","updateApplicationStatusFailure","deleteApplicationStart","deleteApplicationSuccess","filter","deleteApplicationFailure","fetchJobApplicationsStart","fetchJobApplicationsSuccess","fetchJobApplicationsFailure","setFilters","clearFilters","setPage","clearError","clearCurrentApplication","actions","reducer"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/reducers/applicationsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  applications: [],\n  currentApplication: null,\n  loading: false,\n  error: null,\n  pagination: {\n    page: 1,\n    limit: 10,\n    total: 0,\n    pages: 0,\n  },\n  filters: {\n    job_id: '',\n    status: '',\n  },\n};\n\nconst applicationsSlice = createSlice({\n  name: 'applications',\n  initialState,\n  reducers: {\n    fetchApplicationsStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchApplicationsSuccess: (state, action) => {\n      state.loading = false;\n      state.applications = action.payload.applications;\n      state.pagination = action.payload.pagination;\n    },\n    fetchApplicationsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchApplicationStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchApplicationSuccess: (state, action) => {\n      state.loading = false;\n      state.currentApplication = action.payload.application;\n    },\n    fetchApplicationFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    submitApplicationStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    submitApplicationSuccess: (state, action) => {\n      state.loading = false;\n      state.applications.unshift(action.payload.application);\n    },\n    submitApplicationFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateApplicationStatusStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    updateApplicationStatusSuccess: (state, action) => {\n      state.loading = false;\n      const index = state.applications.findIndex(app => app.id === action.payload.application.id);\n      if (index !== -1) {\n        state.applications[index] = action.payload.application;\n      }\n      if (state.currentApplication && state.currentApplication.id === action.payload.application.id) {\n        state.currentApplication = action.payload.application;\n      }\n    },\n    updateApplicationStatusFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    deleteApplicationStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    deleteApplicationSuccess: (state, action) => {\n      state.loading = false;\n      state.applications = state.applications.filter(app => app.id !== action.payload);\n      if (state.currentApplication && state.currentApplication.id === action.payload) {\n        state.currentApplication = null;\n      }\n    },\n    deleteApplicationFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchJobApplicationsStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchJobApplicationsSuccess: (state, action) => {\n      state.loading = false;\n      state.applications = action.payload.applications;\n    },\n    fetchJobApplicationsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = { ...state.filters, ...action.payload };\n      state.pagination.page = 1;\n    },\n    clearFilters: (state) => {\n      state.filters = initialState.filters;\n      state.pagination.page = 1;\n    },\n    setPage: (state, action) => {\n      state.pagination.page = action.payload;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    clearCurrentApplication: (state) => {\n      state.currentApplication = null;\n    },\n  },\n});\n\nexport const {\n  fetchApplicationsStart,\n  fetchApplicationsSuccess,\n  fetchApplicationsFailure,\n  fetchApplicationStart,\n  fetchApplicationSuccess,\n  fetchApplicationFailure,\n  submitApplicationStart,\n  submitApplicationSuccess,\n  submitApplicationFailure,\n  updateApplicationStatusStart,\n  updateApplicationStatusSuccess,\n  updateApplicationStatusFailure,\n  deleteApplicationStart,\n  deleteApplicationSuccess,\n  deleteApplicationFailure,\n  fetchJobApplicationsStart,\n  fetchJobApplicationsSuccess,\n  fetchJobApplicationsFailure,\n  setFilters,\n  clearFilters,\n  setPage,\n  clearError,\n  clearCurrentApplication,\n} = applicationsSlice.actions;\n\nexport default applicationsSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}