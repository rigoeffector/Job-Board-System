{"ast":null,"code":"var _jsxFileName = \"/Users/rigobert/Documents/ISCO/frontend/src/contexts/NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport Notification from '../components/common/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const useNotification = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const addNotification = useCallback(({\n    message,\n    type = 'info',\n    duration = 5000,\n    position = 'top-right'\n  }) => {\n    const id = Date.now() + Math.random();\n    const notification = {\n      id,\n      message,\n      type,\n      duration,\n      position,\n      show: true\n    };\n    setNotifications(prev => [...prev, notification]);\n\n    // Auto-remove notification after duration\n    if (duration > 0) {\n      setTimeout(() => {\n        removeNotification(id);\n      }, duration);\n    }\n    return id;\n  }, []);\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n  const showSuccess = useCallback((message, duration = 5000) => {\n    return addNotification({\n      message,\n      type: 'success',\n      duration\n    });\n  }, [addNotification]);\n  const showError = useCallback((message, duration = 7000) => {\n    return addNotification({\n      message,\n      type: 'error',\n      duration\n    });\n  }, [addNotification]);\n  const showWarning = useCallback((message, duration = 6000) => {\n    return addNotification({\n      message,\n      type: 'warning',\n      duration\n    });\n  }, [addNotification]);\n  const showInfo = useCallback((message, duration = 5000) => {\n    return addNotification({\n      message,\n      type: 'info',\n      duration\n    });\n  }, [addNotification]);\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n    clearAllNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: [children, notifications.map(notification => /*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      type: notification.type,\n      duration: notification.duration,\n      position: notification.position,\n      show: notification.show,\n      onClose: () => removeNotification(notification.id)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s2(NotificationProvider, \"1Dzb2r8hJWo7kIY0yUtb71m2fHU=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","Notification","jsxDEV","_jsxDEV","NotificationContext","useNotification","_s","context","Error","NotificationProvider","children","_s2","notifications","setNotifications","addNotification","message","type","duration","position","id","Date","now","Math","random","notification","show","prev","setTimeout","removeNotification","filter","showSuccess","showError","showWarning","showInfo","clearAllNotifications","value","Provider","map","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport Notification from '../components/common/Notification';\n\nconst NotificationContext = createContext();\n\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const addNotification = useCallback(({ message, type = 'info', duration = 5000, position = 'top-right' }) => {\n    const id = Date.now() + Math.random();\n    const notification = {\n      id,\n      message,\n      type,\n      duration,\n      position,\n      show: true\n    };\n\n    setNotifications(prev => [...prev, notification]);\n\n    // Auto-remove notification after duration\n    if (duration > 0) {\n      setTimeout(() => {\n        removeNotification(id);\n      }, duration);\n    }\n\n    return id;\n  }, []);\n\n  const removeNotification = useCallback((id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  const showSuccess = useCallback((message, duration = 5000) => {\n    return addNotification({ message, type: 'success', duration });\n  }, [addNotification]);\n\n  const showError = useCallback((message, duration = 7000) => {\n    return addNotification({ message, type: 'error', duration });\n  }, [addNotification]);\n\n  const showWarning = useCallback((message, duration = 6000) => {\n    return addNotification({ message, type: 'warning', duration });\n  }, [addNotification]);\n\n  const showInfo = useCallback((message, duration = 5000) => {\n    return addNotification({ message, type: 'info', duration });\n  }, [addNotification]);\n\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n    clearAllNotifications\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n      {/* Render notifications */}\n      {notifications.map((notification) => (\n        <Notification\n          key={notification.id}\n          message={notification.message}\n          type={notification.type}\n          duration={notification.duration}\n          position={notification.position}\n          show={notification.show}\n          onClose={() => removeNotification(notification.id)}\n        />\n      ))}\n    </NotificationContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}