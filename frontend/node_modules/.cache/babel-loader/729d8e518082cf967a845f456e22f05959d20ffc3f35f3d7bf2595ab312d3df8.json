{"ast":null,"code":"import{takeLatest,call,put}from'redux-saga/effects';import{applicationsAPI}from'../../services/api';import{FETCH_APPLICATIONS_REQUEST,FETCH_APPLICATION_REQUEST,SUBMIT_APPLICATION_REQUEST,UPDATE_APPLICATION_STATUS_REQUEST,DELETE_APPLICATION_REQUEST,FETCH_JOB_APPLICATIONS_REQUEST}from'../actions';import{fetchApplicationsStart,fetchApplicationsSuccess,fetchApplicationsFailure,fetchApplicationStart,fetchApplicationSuccess,fetchApplicationFailure,submitApplicationStart,submitApplicationSuccess,submitApplicationFailure,updateApplicationStatusStart,updateApplicationStatusSuccess,updateApplicationStatusFailure,deleteApplicationStart,deleteApplicationSuccess,deleteApplicationFailure,fetchJobApplicationsStart,fetchJobApplicationsSuccess,fetchJobApplicationsFailure}from'../reducers/applicationsSlice';// Fetch applications saga\nfunction*fetchApplicationsSaga(action){try{yield put(fetchApplicationsStart());const response=yield call(applicationsAPI.getApplications,action.payload);yield put(fetchApplicationsSuccess(response.data));}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to fetch applications';yield put(fetchApplicationsFailure(errorMessage));}}// Fetch single application saga\nfunction*fetchApplicationSaga(action){try{yield put(fetchApplicationStart());const response=yield call(applicationsAPI.getApplication,action.payload);yield put(fetchApplicationSuccess(response.data));}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to fetch application';yield put(fetchApplicationFailure(errorMessage));}}// Submit application saga\nfunction*submitApplicationSaga(action){try{yield put(submitApplicationStart());const response=yield call(applicationsAPI.submitApplication,action.payload);yield put(submitApplicationSuccess(response.data));}catch(error){var _error$response3,_error$response3$data;const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Failed to submit application';yield put(submitApplicationFailure(errorMessage));}}// Update application status saga\nfunction*updateApplicationStatusSaga(action){try{yield put(updateApplicationStatusStart());const{id,status}=action.payload;const response=yield call(applicationsAPI.updateApplicationStatus,id,status);yield put(updateApplicationStatusSuccess(response.data));}catch(error){var _error$response4,_error$response4$data;const errorMessage=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Failed to update application status';yield put(updateApplicationStatusFailure(errorMessage));}}// Delete application saga\nfunction*deleteApplicationSaga(action){try{yield put(deleteApplicationStart());yield call(applicationsAPI.deleteApplication,action.payload);yield put(deleteApplicationSuccess(action.payload));}catch(error){var _error$response5,_error$response5$data;const errorMessage=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'Failed to delete application';yield put(deleteApplicationFailure(errorMessage));}}// Fetch job applications saga\nfunction*fetchJobApplicationsSaga(action){try{yield put(fetchJobApplicationsStart());const response=yield call(applicationsAPI.getJobApplications,action.payload);yield put(fetchJobApplicationsSuccess(response.data));}catch(error){var _error$response6,_error$response6$data;const errorMessage=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||'Failed to fetch job applications';yield put(fetchJobApplicationsFailure(errorMessage));}}// Applications saga watcher\nexport default function*applicationsSaga(){yield takeLatest(FETCH_APPLICATIONS_REQUEST,fetchApplicationsSaga);yield takeLatest(FETCH_APPLICATION_REQUEST,fetchApplicationSaga);yield takeLatest(SUBMIT_APPLICATION_REQUEST,submitApplicationSaga);yield takeLatest(UPDATE_APPLICATION_STATUS_REQUEST,updateApplicationStatusSaga);yield takeLatest(DELETE_APPLICATION_REQUEST,deleteApplicationSaga);yield takeLatest(FETCH_JOB_APPLICATIONS_REQUEST,fetchJobApplicationsSaga);}","map":{"version":3,"names":["takeLatest","call","put","applicationsAPI","FETCH_APPLICATIONS_REQUEST","FETCH_APPLICATION_REQUEST","SUBMIT_APPLICATION_REQUEST","UPDATE_APPLICATION_STATUS_REQUEST","DELETE_APPLICATION_REQUEST","FETCH_JOB_APPLICATIONS_REQUEST","fetchApplicationsStart","fetchApplicationsSuccess","fetchApplicationsFailure","fetchApplicationStart","fetchApplicationSuccess","fetchApplicationFailure","submitApplicationStart","submitApplicationSuccess","submitApplicationFailure","updateApplicationStatusStart","updateApplicationStatusSuccess","updateApplicationStatusFailure","deleteApplicationStart","deleteApplicationSuccess","deleteApplicationFailure","fetchJobApplicationsStart","fetchJobApplicationsSuccess","fetchJobApplicationsFailure","fetchApplicationsSaga","action","response","getApplications","payload","data","error","_error$response","_error$response$data","errorMessage","fetchApplicationSaga","getApplication","_error$response2","_error$response2$data","submitApplicationSaga","submitApplication","_error$response3","_error$response3$data","updateApplicationStatusSaga","id","status","updateApplicationStatus","_error$response4","_error$response4$data","deleteApplicationSaga","deleteApplication","_error$response5","_error$response5$data","fetchJobApplicationsSaga","getJobApplications","_error$response6","_error$response6$data","applicationsSaga"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/sagas/applicationsSaga.js"],"sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport { applicationsAPI } from '../../services/api';\nimport {\n  FETCH_APPLICATIONS_REQUEST,\n  FETCH_APPLICATION_REQUEST,\n  SUBMIT_APPLICATION_REQUEST,\n  UPDATE_APPLICATION_STATUS_REQUEST,\n  DELETE_APPLICATION_REQUEST,\n  FETCH_JOB_APPLICATIONS_REQUEST,\n} from '../actions';\nimport {\n  fetchApplicationsStart,\n  fetchApplicationsSuccess,\n  fetchApplicationsFailure,\n  fetchApplicationStart,\n  fetchApplicationSuccess,\n  fetchApplicationFailure,\n  submitApplicationStart,\n  submitApplicationSuccess,\n  submitApplicationFailure,\n  updateApplicationStatusStart,\n  updateApplicationStatusSuccess,\n  updateApplicationStatusFailure,\n  deleteApplicationStart,\n  deleteApplicationSuccess,\n  deleteApplicationFailure,\n  fetchJobApplicationsStart,\n  fetchJobApplicationsSuccess,\n  fetchJobApplicationsFailure,\n} from '../reducers/applicationsSlice';\n\n// Fetch applications saga\nfunction* fetchApplicationsSaga(action) {\n  try {\n    yield put(fetchApplicationsStart());\n    const response = yield call(applicationsAPI.getApplications, action.payload);\n    yield put(fetchApplicationsSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch applications';\n    yield put(fetchApplicationsFailure(errorMessage));\n  }\n}\n\n// Fetch single application saga\nfunction* fetchApplicationSaga(action) {\n  try {\n    yield put(fetchApplicationStart());\n    const response = yield call(applicationsAPI.getApplication, action.payload);\n    yield put(fetchApplicationSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch application';\n    yield put(fetchApplicationFailure(errorMessage));\n  }\n}\n\n// Submit application saga\nfunction* submitApplicationSaga(action) {\n  try {\n    yield put(submitApplicationStart());\n    const response = yield call(applicationsAPI.submitApplication, action.payload);\n    yield put(submitApplicationSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to submit application';\n    yield put(submitApplicationFailure(errorMessage));\n  }\n}\n\n// Update application status saga\nfunction* updateApplicationStatusSaga(action) {\n  try {\n    yield put(updateApplicationStatusStart());\n    const { id, status } = action.payload;\n    const response = yield call(applicationsAPI.updateApplicationStatus, id, status);\n    yield put(updateApplicationStatusSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to update application status';\n    yield put(updateApplicationStatusFailure(errorMessage));\n  }\n}\n\n// Delete application saga\nfunction* deleteApplicationSaga(action) {\n  try {\n    yield put(deleteApplicationStart());\n    yield call(applicationsAPI.deleteApplication, action.payload);\n    yield put(deleteApplicationSuccess(action.payload));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to delete application';\n    yield put(deleteApplicationFailure(errorMessage));\n  }\n}\n\n// Fetch job applications saga\nfunction* fetchJobApplicationsSaga(action) {\n  try {\n    yield put(fetchJobApplicationsStart());\n    const response = yield call(applicationsAPI.getJobApplications, action.payload);\n    yield put(fetchJobApplicationsSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch job applications';\n    yield put(fetchJobApplicationsFailure(errorMessage));\n  }\n}\n\n// Applications saga watcher\nexport default function* applicationsSaga() {\n  yield takeLatest(FETCH_APPLICATIONS_REQUEST, fetchApplicationsSaga);\n  yield takeLatest(FETCH_APPLICATION_REQUEST, fetchApplicationSaga);\n  yield takeLatest(SUBMIT_APPLICATION_REQUEST, submitApplicationSaga);\n  yield takeLatest(UPDATE_APPLICATION_STATUS_REQUEST, updateApplicationStatusSaga);\n  yield takeLatest(DELETE_APPLICATION_REQUEST, deleteApplicationSaga);\n  yield takeLatest(FETCH_JOB_APPLICATIONS_REQUEST, fetchJobApplicationsSaga);\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}