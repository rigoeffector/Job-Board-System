{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      console.log('Auth slice: loginStart action dispatched');\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      console.log('Auth slice: loginSuccess action dispatched with payload:', action.payload);\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n      console.log('Auth slice: State updated, isAuthenticated:', state.isAuthenticated);\n    },\n    loginFailure: (state, action) => {\n      console.log('Auth slice: loginFailure action dispatched with error:', action.payload);\n      state.loading = false;\n      state.error = action.payload;\n    },\n    registerStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    registerSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n    },\n    registerFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    updateProfile: (state, action) => {\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    },\n    setAuthenticated: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setUnauthenticated: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  logout,\n  clearError,\n  updateProfile\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","authSlice","name","reducers","loginStart","state","console","log","loginSuccess","action","payload","setItem","loginFailure","registerStart","registerSuccess","registerFailure","logout","removeItem","clearError","updateProfile","setAuthenticated","setUnauthenticated","actions","reducer"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/reducers/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      console.log('Auth slice: loginStart action dispatched');\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      console.log('Auth slice: loginSuccess action dispatched with payload:', action.payload);\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n      console.log('Auth slice: State updated, isAuthenticated:', state.isAuthenticated);\n    },\n    loginFailure: (state, action) => {\n      console.log('Auth slice: loginFailure action dispatched with error:', action.payload);\n      state.loading = false;\n      state.error = action.payload;\n    },\n    registerStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    registerSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n    },\n    registerFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    updateProfile: (state, action) => {\n      state.user = { ...state.user, ...action.payload };\n    },\n    setAuthenticated: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setUnauthenticated: (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    },\n  },\n});\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  logout,\n  clearError,\n  updateProfile,\n} = authSlice.actions;\n\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}