{"ast":null,"code":"import{takeLatest,call,put}from'redux-saga/effects';import{jobsAPI}from'../../services/api';import{FETCH_JOBS_REQUEST,FETCH_JOB_REQUEST,CREATE_JOB_REQUEST,UPDATE_JOB_REQUEST,DELETE_JOB_REQUEST}from'../actions';import{fetchJobsStart,fetchJobsSuccess,fetchJobsFailure,fetchJobStart,fetchJobSuccess,fetchJobFailure,createJobStart,createJobSuccess,createJobFailure,updateJobStart,updateJobSuccess,updateJobFailure,deleteJobStart,deleteJobSuccess,deleteJobFailure}from'../reducers/jobsSlice';// Fetch jobs saga\nfunction*fetchJobsSaga(action){try{yield put(fetchJobsStart());const response=yield call(jobsAPI.getJobs,action.payload);yield put(fetchJobsSuccess(response.data));}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to fetch jobs';yield put(fetchJobsFailure(errorMessage));}}// Fetch single job saga\nfunction*fetchJobSaga(action){try{yield put(fetchJobStart());const response=yield call(jobsAPI.getJob,action.payload);yield put(fetchJobSuccess(response.data));}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to fetch job';yield put(fetchJobFailure(errorMessage));}}// Create job saga\nfunction*createJobSaga(action){try{yield put(createJobStart());const response=yield call(jobsAPI.createJob,action.payload);yield put(createJobSuccess(response.data));}catch(error){var _error$response3,_error$response3$data;const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Failed to create job';yield put(createJobFailure(errorMessage));}}// Update job saga\nfunction*updateJobSaga(action){try{yield put(updateJobStart());const{id,jobData}=action.payload;const response=yield call(jobsAPI.updateJob,id,jobData);yield put(updateJobSuccess(response.data));}catch(error){var _error$response4,_error$response4$data;const errorMessage=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Failed to update job';yield put(updateJobFailure(errorMessage));}}// Delete job saga\nfunction*deleteJobSaga(action){try{yield put(deleteJobStart());yield call(jobsAPI.deleteJob,action.payload);yield put(deleteJobSuccess(action.payload));}catch(error){var _error$response5,_error$response5$data;const errorMessage=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'Failed to delete job';yield put(deleteJobFailure(errorMessage));}}// Jobs saga watcher\nexport default function*jobsSaga(){yield takeLatest(FETCH_JOBS_REQUEST,fetchJobsSaga);yield takeLatest(FETCH_JOB_REQUEST,fetchJobSaga);yield takeLatest(CREATE_JOB_REQUEST,createJobSaga);yield takeLatest(UPDATE_JOB_REQUEST,updateJobSaga);yield takeLatest(DELETE_JOB_REQUEST,deleteJobSaga);}","map":{"version":3,"names":["takeLatest","call","put","jobsAPI","FETCH_JOBS_REQUEST","FETCH_JOB_REQUEST","CREATE_JOB_REQUEST","UPDATE_JOB_REQUEST","DELETE_JOB_REQUEST","fetchJobsStart","fetchJobsSuccess","fetchJobsFailure","fetchJobStart","fetchJobSuccess","fetchJobFailure","createJobStart","createJobSuccess","createJobFailure","updateJobStart","updateJobSuccess","updateJobFailure","deleteJobStart","deleteJobSuccess","deleteJobFailure","fetchJobsSaga","action","response","getJobs","payload","data","error","_error$response","_error$response$data","errorMessage","fetchJobSaga","getJob","_error$response2","_error$response2$data","createJobSaga","createJob","_error$response3","_error$response3$data","updateJobSaga","id","jobData","updateJob","_error$response4","_error$response4$data","deleteJobSaga","deleteJob","_error$response5","_error$response5$data","jobsSaga"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/store/sagas/jobsSaga.js"],"sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport { jobsAPI } from '../../services/api';\nimport {\n  FETCH_JOBS_REQUEST,\n  FETCH_JOB_REQUEST,\n  CREATE_JOB_REQUEST,\n  UPDATE_JOB_REQUEST,\n  DELETE_JOB_REQUEST,\n} from '../actions';\nimport {\n  fetchJobsStart,\n  fetchJobsSuccess,\n  fetchJobsFailure,\n  fetchJobStart,\n  fetchJobSuccess,\n  fetchJobFailure,\n  createJobStart,\n  createJobSuccess,\n  createJobFailure,\n  updateJobStart,\n  updateJobSuccess,\n  updateJobFailure,\n  deleteJobStart,\n  deleteJobSuccess,\n  deleteJobFailure,\n} from '../reducers/jobsSlice';\n\n// Fetch jobs saga\nfunction* fetchJobsSaga(action) {\n  try {\n    yield put(fetchJobsStart());\n    const response = yield call(jobsAPI.getJobs, action.payload);\n    yield put(fetchJobsSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch jobs';\n    yield put(fetchJobsFailure(errorMessage));\n  }\n}\n\n// Fetch single job saga\nfunction* fetchJobSaga(action) {\n  try {\n    yield put(fetchJobStart());\n    const response = yield call(jobsAPI.getJob, action.payload);\n    yield put(fetchJobSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to fetch job';\n    yield put(fetchJobFailure(errorMessage));\n  }\n}\n\n// Create job saga\nfunction* createJobSaga(action) {\n  try {\n    yield put(createJobStart());\n    const response = yield call(jobsAPI.createJob, action.payload);\n    yield put(createJobSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to create job';\n    yield put(createJobFailure(errorMessage));\n  }\n}\n\n// Update job saga\nfunction* updateJobSaga(action) {\n  try {\n    yield put(updateJobStart());\n    const { id, jobData } = action.payload;\n    const response = yield call(jobsAPI.updateJob, id, jobData);\n    yield put(updateJobSuccess(response.data));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to update job';\n    yield put(updateJobFailure(errorMessage));\n  }\n}\n\n// Delete job saga\nfunction* deleteJobSaga(action) {\n  try {\n    yield put(deleteJobStart());\n    yield call(jobsAPI.deleteJob, action.payload);\n    yield put(deleteJobSuccess(action.payload));\n  } catch (error) {\n    const errorMessage = error.response?.data?.error || 'Failed to delete job';\n    yield put(deleteJobFailure(errorMessage));\n  }\n}\n\n// Jobs saga watcher\nexport default function* jobsSaga() {\n  yield takeLatest(FETCH_JOBS_REQUEST, fetchJobsSaga);\n  yield takeLatest(FETCH_JOB_REQUEST, fetchJobSaga);\n  yield takeLatest(CREATE_JOB_REQUEST, createJobSaga);\n  yield takeLatest(UPDATE_JOB_REQUEST, updateJobSaga);\n  yield takeLatest(DELETE_JOB_REQUEST, deleteJobSaga);\n} "],"mappings":"AAAA,OAASA,UAAU,CAAEC,IAAI,CAAEC,GAAG,KAAQ,oBAAoB,CAC1D,OAASC,OAAO,KAAQ,oBAAoB,CAC5C,OACEC,kBAAkB,CAClBC,iBAAiB,CACjBC,kBAAkB,CAClBC,kBAAkB,CAClBC,kBAAkB,KACb,YAAY,CACnB,OACEC,cAAc,CACdC,gBAAgB,CAChBC,gBAAgB,CAChBC,aAAa,CACbC,eAAe,CACfC,eAAe,CACfC,cAAc,CACdC,gBAAgB,CAChBC,gBAAgB,CAChBC,cAAc,CACdC,gBAAgB,CAChBC,gBAAgB,CAChBC,cAAc,CACdC,gBAAgB,CAChBC,gBAAgB,KACX,uBAAuB,CAE9B;AACA,SAAUC,aAAaA,CAACC,MAAM,CAAE,CAC9B,GAAI,CACF,KAAM,CAAAvB,GAAG,CAACO,cAAc,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAAzB,IAAI,CAACE,OAAO,CAACwB,OAAO,CAAEF,MAAM,CAACG,OAAO,CAAC,CAC5D,KAAM,CAAA1B,GAAG,CAACQ,gBAAgB,CAACgB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC5C,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACd,KAAM,CAAAC,YAAY,CAAG,EAAAF,eAAA,CAAAD,KAAK,CAACJ,QAAQ,UAAAK,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBF,KAAK,GAAI,sBAAsB,CAC1E,KAAM,CAAA5B,GAAG,CAACS,gBAAgB,CAACsB,YAAY,CAAC,CAAC,CAC3C,CACF,CAEA;AACA,SAAUC,YAAYA,CAACT,MAAM,CAAE,CAC7B,GAAI,CACF,KAAM,CAAAvB,GAAG,CAACU,aAAa,CAAC,CAAC,CAAC,CAC1B,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAAzB,IAAI,CAACE,OAAO,CAACgC,MAAM,CAAEV,MAAM,CAACG,OAAO,CAAC,CAC3D,KAAM,CAAA1B,GAAG,CAACW,eAAe,CAACa,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC3C,CAAE,MAAOC,KAAK,CAAE,KAAAM,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAJ,YAAY,CAAG,EAAAG,gBAAA,CAAAN,KAAK,CAACJ,QAAQ,UAAAU,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBP,IAAI,UAAAQ,qBAAA,iBAApBA,qBAAA,CAAsBP,KAAK,GAAI,qBAAqB,CACzE,KAAM,CAAA5B,GAAG,CAACY,eAAe,CAACmB,YAAY,CAAC,CAAC,CAC1C,CACF,CAEA;AACA,SAAUK,aAAaA,CAACb,MAAM,CAAE,CAC9B,GAAI,CACF,KAAM,CAAAvB,GAAG,CAACa,cAAc,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAAzB,IAAI,CAACE,OAAO,CAACoC,SAAS,CAAEd,MAAM,CAACG,OAAO,CAAC,CAC9D,KAAM,CAAA1B,GAAG,CAACc,gBAAgB,CAACU,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC5C,CAAE,MAAOC,KAAK,CAAE,KAAAU,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAR,YAAY,CAAG,EAAAO,gBAAA,CAAAV,KAAK,CAACJ,QAAQ,UAAAc,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBX,IAAI,UAAAY,qBAAA,iBAApBA,qBAAA,CAAsBX,KAAK,GAAI,sBAAsB,CAC1E,KAAM,CAAA5B,GAAG,CAACe,gBAAgB,CAACgB,YAAY,CAAC,CAAC,CAC3C,CACF,CAEA;AACA,SAAUS,aAAaA,CAACjB,MAAM,CAAE,CAC9B,GAAI,CACF,KAAM,CAAAvB,GAAG,CAACgB,cAAc,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAEyB,EAAE,CAAEC,OAAQ,CAAC,CAAGnB,MAAM,CAACG,OAAO,CACtC,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAzB,IAAI,CAACE,OAAO,CAAC0C,SAAS,CAAEF,EAAE,CAAEC,OAAO,CAAC,CAC3D,KAAM,CAAA1C,GAAG,CAACiB,gBAAgB,CAACO,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC5C,CAAE,MAAOC,KAAK,CAAE,KAAAgB,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAd,YAAY,CAAG,EAAAa,gBAAA,CAAAhB,KAAK,CAACJ,QAAQ,UAAAoB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBjB,IAAI,UAAAkB,qBAAA,iBAApBA,qBAAA,CAAsBjB,KAAK,GAAI,sBAAsB,CAC1E,KAAM,CAAA5B,GAAG,CAACkB,gBAAgB,CAACa,YAAY,CAAC,CAAC,CAC3C,CACF,CAEA;AACA,SAAUe,aAAaA,CAACvB,MAAM,CAAE,CAC9B,GAAI,CACF,KAAM,CAAAvB,GAAG,CAACmB,cAAc,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAApB,IAAI,CAACE,OAAO,CAAC8C,SAAS,CAAExB,MAAM,CAACG,OAAO,CAAC,CAC7C,KAAM,CAAA1B,GAAG,CAACoB,gBAAgB,CAACG,MAAM,CAACG,OAAO,CAAC,CAAC,CAC7C,CAAE,MAAOE,KAAK,CAAE,KAAAoB,gBAAA,CAAAC,qBAAA,CACd,KAAM,CAAAlB,YAAY,CAAG,EAAAiB,gBAAA,CAAApB,KAAK,CAACJ,QAAQ,UAAAwB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBrB,IAAI,UAAAsB,qBAAA,iBAApBA,qBAAA,CAAsBrB,KAAK,GAAI,sBAAsB,CAC1E,KAAM,CAAA5B,GAAG,CAACqB,gBAAgB,CAACU,YAAY,CAAC,CAAC,CAC3C,CACF,CAEA;AACA,cAAe,UAAUmB,QAAQA,CAAA,CAAG,CAClC,KAAM,CAAApD,UAAU,CAACI,kBAAkB,CAAEoB,aAAa,CAAC,CACnD,KAAM,CAAAxB,UAAU,CAACK,iBAAiB,CAAE6B,YAAY,CAAC,CACjD,KAAM,CAAAlC,UAAU,CAACM,kBAAkB,CAAEgC,aAAa,CAAC,CACnD,KAAM,CAAAtC,UAAU,CAACO,kBAAkB,CAAEmC,aAAa,CAAC,CACnD,KAAM,CAAA1C,UAAU,CAACQ,kBAAkB,CAAEwC,aAAa,CAAC,CACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}