{"ast":null,"code":"var _jsxFileName = \"/Users/rigobert/Documents/ISCO/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfileRequest } from './store/actions';\n\n// Layout Components\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\n\n// Auth Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport ProtectedRoute from './components/auth/ProtectedRoute';\nimport AdminRoute from './components/auth/AdminRoute';\n\n// Pages\nimport LandingPage from './components/pages/LandingPage';\nimport UserDashboard from './components/dashboard/UserDashboard';\nimport AdminDashboard from './components/dashboard/AdminDashboard';\nimport Jobs from './components/jobs/JobList';\nimport JobDetail from './components/jobs/JobDetail';\nimport Applications from './components/applications/ApplicationList';\nimport Profile from './components/auth/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    token,\n    loading\n  } = useSelector(state => state.auth);\n  console.log('App component rendered', {\n    token,\n    loading\n  });\n  useEffect(() => {\n    console.log('App useEffect triggered', {\n      token\n    });\n    if (token) {\n      console.log('Dispatching getProfileRequest');\n      dispatch(getProfileRequest());\n    }\n  }, [dispatch, token]);\n  console.log('App render state:', {\n    loading\n  });\n\n  // Temporary simple test to see if basic rendering works\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: '#f0f0f0',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'red',\n        fontSize: '24px'\n      },\n      children: \"TEST - App is rendering!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Token: \", token ? 'Present' : 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Loading: \", loading ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current time: \", new Date().toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  // Original code commented out for debugging\n  /*\n  if (loading) {\n    console.log('Showing loading screen');\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n   console.log('Rendering main app content');\n  return (\n    <Router>\n      <div className=\"min-h-screen flex flex-col bg-gray-50\">\n        <Header />\n        <main className=\"flex-1\">\n          <Routes>\n            <Route path=\"/\" element={<LandingPage />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/jobs\" element={<Jobs />} />\n            <Route path=\"/jobs/:id\" element={<JobDetail />} />\n            \n            <Route \n              path=\"/dashboard\" \n              element={\n                <ProtectedRoute>\n                  <UserDashboard />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/applications\" \n              element={\n                <ProtectedRoute>\n                  <Applications />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/profile\" \n              element={\n                <ProtectedRoute>\n                  <Profile />\n                </ProtectedRoute>\n              } \n            />\n            \n            <Route \n              path=\"/admin\" \n              element={\n                <AdminRoute>\n                  <AdminDashboard />\n                </AdminRoute>\n              } \n            />\n            <Route \n              path=\"/admin/jobs\" \n              element={\n                <AdminRoute>\n                  <div className=\"container mx-auto px-4 py-8\">\n                    <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Manage Jobs</h1>\n                    <p className=\"text-gray-600\">Admin job management interface coming soon...</p>\n                  </div>\n                </AdminRoute>\n              } \n            />\n            <Route \n              path=\"/admin/applications\" \n              element={\n                <AdminRoute>\n                  <div className=\"container mx-auto px-4 py-8\">\n                    <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Manage Applications</h1>\n                    <p className=\"text-gray-600\">Admin application management interface coming soon...</p>\n                  </div>\n                </AdminRoute>\n              } \n            />\n            \n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n          </Routes>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n  */\n}\n_s(App, \"7k0IMyT+HM4A6kFv8QE0tqOdjuE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Routes","Route","Navigate","useDispatch","useSelector","getProfileRequest","Header","Footer","Login","Register","ProtectedRoute","AdminRoute","LandingPage","UserDashboard","AdminDashboard","Jobs","JobDetail","Applications","Profile","jsxDEV","_jsxDEV","App","_s","dispatch","token","loading","state","auth","console","log","style","padding","backgroundColor","minHeight","children","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/rigobert/Documents/ISCO/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfileRequest } from './store/actions';\n\n// Layout Components\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\n\n// Auth Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport ProtectedRoute from './components/auth/ProtectedRoute';\nimport AdminRoute from './components/auth/AdminRoute';\n\n// Pages\nimport LandingPage from './components/pages/LandingPage';\nimport UserDashboard from './components/dashboard/UserDashboard';\nimport AdminDashboard from './components/dashboard/AdminDashboard';\nimport Jobs from './components/jobs/JobList';\nimport JobDetail from './components/jobs/JobDetail';\nimport Applications from './components/applications/ApplicationList';\nimport Profile from './components/auth/Profile';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { token, loading } = useSelector((state) => state.auth);\n\n  console.log('App component rendered', { token, loading });\n\n  useEffect(() => {\n    console.log('App useEffect triggered', { token });\n    if (token) {\n      console.log('Dispatching getProfileRequest');\n      dispatch(getProfileRequest());\n    }\n  }, [dispatch, token]);\n\n  console.log('App render state:', { loading });\n\n  // Temporary simple test to see if basic rendering works\n  return (\n    <div style={{ padding: '20px', backgroundColor: '#f0f0f0', minHeight: '100vh' }}>\n      <h1 style={{ color: 'red', fontSize: '24px' }}>TEST - App is rendering!</h1>\n      <p>Token: {token ? 'Present' : 'None'}</p>\n      <p>Loading: {loading ? 'Yes' : 'No'}</p>\n      <p>Current time: {new Date().toLocaleTimeString()}</p>\n    </div>\n  );\n\n  // Original code commented out for debugging\n  /*\n  if (loading) {\n    console.log('Showing loading screen');\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  console.log('Rendering main app content');\n  return (\n    <Router>\n      <div className=\"min-h-screen flex flex-col bg-gray-50\">\n        <Header />\n        <main className=\"flex-1\">\n          <Routes>\n            <Route path=\"/\" element={<LandingPage />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/jobs\" element={<Jobs />} />\n            <Route path=\"/jobs/:id\" element={<JobDetail />} />\n            \n            <Route \n              path=\"/dashboard\" \n              element={\n                <ProtectedRoute>\n                  <UserDashboard />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/applications\" \n              element={\n                <ProtectedRoute>\n                  <Applications />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path=\"/profile\" \n              element={\n                <ProtectedRoute>\n                  <Profile />\n                </ProtectedRoute>\n              } \n            />\n            \n            <Route \n              path=\"/admin\" \n              element={\n                <AdminRoute>\n                  <AdminDashboard />\n                </AdminRoute>\n              } \n            />\n            <Route \n              path=\"/admin/jobs\" \n              element={\n                <AdminRoute>\n                  <div className=\"container mx-auto px-4 py-8\">\n                    <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Manage Jobs</h1>\n                    <p className=\"text-gray-600\">Admin job management interface coming soon...</p>\n                  </div>\n                </AdminRoute>\n              } \n            />\n            <Route \n              path=\"/admin/applications\" \n              element={\n                <AdminRoute>\n                  <div className=\"container mx-auto px-4 py-8\">\n                    <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Manage Applications</h1>\n                    <p className=\"text-gray-600\">Admin application management interface coming soon...</p>\n                  </div>\n                </AdminRoute>\n              } \n            />\n            \n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n          </Routes>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n  */\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}